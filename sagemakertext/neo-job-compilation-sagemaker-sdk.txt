Compile a Model (Amazon SageMaker SDK)
You can use the https://sagemaker.readthedocs.io/en/stable/api/training/estimators.html?#sagemaker.estimator.Estimator.compile_model API in the Amazon SageMaker SDK for Python to compile a trained model and optimize it for specific target hardware. The API should be invoked on the estimator object used during model training. 
Note 
You must set MMS_DEFAULT_RESPONSE_TIMEOUT environment variable to 500 when compiling the model with MXNet or PyTorch. The environment variable is not needed for TensorFlow. 
The following is an example of how you can compile a model using the trained_model_estimator object: 
```
Replace the value of expectedtrainedmodel_input below and
specify the name & shape of the expected inputs for your trained model
in json dictionary form
expectedtrainedmodel_input = {'data':[1, 784]}
Replace the example targetinstancefamily below to your preferred targetinstancefamily
compiledmodel = trainedmodelestimator.compilemodel(targetinstancefamily='mlc5',
        inputshape=expectedtrainedmodelinput,
        outputpath='insert s3 output path',
        env={'MMSDEFAULTRESPONSE_TIMEOUT': '500'})
```
The code compiles the model, saves the optimized model at output_path, and creates a SageMaker model that can be deployed to an endpoint. Sample notebooks of using the SDK for Python are provided in the Neo Model Compilation Sample Notebooks section. 

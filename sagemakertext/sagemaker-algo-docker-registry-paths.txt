Docker Registry Paths and Example Code
The following topics list the Docker registry path and other parameters for each of the Amazon SageMaker provided algorithms and Deep Learning Containers (DLC).
Use the path as follows:
+ To create a training job (create_training_job), specify the Docker registry path (TrainingImage) and the training input mode (TrainingInputMode) for the training image. You create a training job to train a model using a specific dataset.
+ To create a model (create_model), specify the Docker registry path (Image) for the inference image (PrimaryContainer Image). SageMaker launches machine learning compute instances that are based on the endpoint configuration and deploys the model, which includes the artifacts (the result of model training).
Note 
For the registry path, use the :1 version tag to ensure that you are using a stable version of the algorithm/DLC. You can reliably host a model trained using an image with the :1 tag on an inference image that has the :1 tag. Using the :latest tag in the registry path provides you with the most up-to-date version of the algorithm/DLC, but might cause problems with backward compatibility. Avoid using the :latest tag for production purposes.
Important* 
When you retrieve the SageMaker XGBoost image URI, do not use :latest or :1 for the image URI tag. You must specify one of the Supported versions to choose the SageMaker-managed XGBoost container with the native XGBoost package version that you want to use. To find the package version migrated into the SageMaker XGBoost containers, see Docker Registry Paths and Example Code, choose your AWS Region, and navigate to the *XGBoost (algorithm) section.
To find the registry path, choose the AWS Region, then choose the algorithm or DLC.
Topics
+ US East (Ohio)
+ US East (N. Virginia)
+ US West (N. California)
+ US West (Oregon)
+ Africa (Cape Town)
+ Asia Pacific (Hong Kong)
+ Asia Pacific (Mumbai)
+ Asia Pacific (Osaka)
+ Asia Pacific (Seoul)
+ Asia Pacific (Singapore)
+ Asia Pacific (Sydney)
+ Asia Pacific (Jakarta)
+ Asia Pacific (Tokyo)
+ Canada (Central)
+ China (Beijing)
+ China (Ningxia)
+ Europe (Frankfurt)
+ Europe (Ireland)
+ Europe (London)
+ Europe (Paris)
+ Europe (Stockholm)
+ Europe (Milan)
+ Middle East (Bahrain)
+ South America (SÃ£o Paulo)
+ AWS GovCloud (US-West)
